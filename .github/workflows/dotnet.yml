name: dotnet
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        configs:
          - Debug
          - Release
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
      - id: setup-dotnet
        name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.x"
          dotnet-quality: ga
      - id: cache
        name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{runner.os}}-nuget-${{hashFiles('**/packages.lock.json')}}
          restore-keys: |
            ${{runner.os}}-nuget-
      - id: restore
        name: Restore NuGet packages
        run: dotnet restore
      - id: build
        name: Build
        run: dotnet build --no-restore --configuration ${{matrix.configs}}
  test:
    name: Test
    runs-on: ${{matrix.os}}
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        configs:
          - Debug
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
      - id: setup-dotnet
        name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.x"
          dotnet-quality: ga
      - id: cache
        name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{runner.os}}-nuget-${{hashFiles('**/packages.lock.json')}}
          restore-keys: |
            ${{runner.os}}-nuget-
      - id: restore
        name: Restore NuGet packages
        run: dotnet restore
      - id: build
        name: Build
        run: dotnet build --no-restore --configuration ${{matrix.configs}}
      - id: test
        name: Test
        run: dotnet test --no-build --configuration ${{matrix.configs}} --collect "XPlat Code Coverage"
      - id: generate-report
        name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: "**/coverage.cobertura.xml"
          targetdir: coverage
          reporttypes: "Html_Dark;MHtml;MarkdownSummary;MarkdownSummaryGithub;TextSummary"
          verbosity: Info
          assemblyfilters: -*Test*
          title: "Glekcraft Code Coverage Report"
          tag: ${{github.sha}}
          license: ${{secrets.REPORTGENERATOR_LICENSE}}
      - id: upload-report
        name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage
